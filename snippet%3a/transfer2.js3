let s_addr='0xAD94F4720927B2829666EF8Bae1e093eC6a90952'
let r_addrs=[
"0x98840282a34956627FcD22E3AA139237EF8E9cBE",
"0x140d084f907973818382cFf6612A7313C928b6D4",
"0xa4EE513c0e60ED29BD8881b7e45B189CCD9cc22B",
"0x65bEa4361903AdB365c59b23d7F0FaC8472F7843",
"0xE1b291F1A5bDff53CdB75584C5bD6e5Cc6ACf4CC",
"0x14F4363d6EaC12BBCe8930dE78BBa41B29EEab88",
"0x575d4B1759c587D7b1FAC072704086e34b53e2CB",
"0x4E4498dcc77C6EDF4AF4bA7c3F3286bA3fdC3a65",
"0x3896a7f7c694511ebB86dD8295227F8a0aC01cBC",
]

/**
* 账户间转账选择器
*/
class EthAccountSelector{
    __ethAddressList = []
    constructor(list) {
        this.__ethAddressList = list;
    }
    titleList = () => {
        //0xE11b...6354
        let ret=this.__ethAddressList.map(o => {
            let s = String(o)
            let s1 = s.substring(0, 5);
            let s2 = s.substring(s.length - 4, s.length)
            return s1 + '...' + s2
        })
        return ret
    }
    indexOf=(title)=>{
        let ret = this.titleList().indexOf(title)
        return ret
    }
}

class Utils {
    /**
    * 带回调的延迟函数
    sleep2(1000).then((resolve, reject)=>console.log("done"))
    */
    static sleep = (ms) => {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    /**
    * 等待某个选择器出现
    */
    static waitFor = (selector, loopCount) => {
        return new Promise((resolve, reject) => {
            var result = null;
            while (loopCount > 0) {
                ret = document.querySelector(selector);
                if (ret !== null)
                    break;
                sleep(100)
                console.log(selector + ' 没有找到，继续等待...')
                loopCount--
            }
            return ret
        })
    }
}

/**
* 执行脚本
*/
let run=()=>{
    let send_p=new Promise((a,b)=>{
            let btnSend = document.querySelectorAll('.icon-button__circle')[1].click()//点击发送按钮
    })
    let 
    Promise.all([
        .)
        
    ])
    

}