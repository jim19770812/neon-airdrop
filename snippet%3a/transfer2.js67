/*microsoft edge 专用转账脚本*/


let s_addr='0xAD94F4720927B2829666EF8Bae1e093eC6a90952'
let r_addrs=[
'0xAD94F4720927B2829666EF8Bae1e093eC6a90952',
"0x98840282a34956627FcD22E3AA139237EF8E9cBE",
"0x140d084f907973818382cFf6612A7313C928b6D4",
"0xa4EE513c0e60ED29BD8881b7e45B189CCD9cc22B",
"0x65bEa4361903AdB365c59b23d7F0FaC8472F7843",
"0xE1b291F1A5bDff53CdB75584C5bD6e5Cc6ACf4CC",
"0x14F4363d6EaC12BBCe8930dE78BBa41B29EEab88",
"0x575d4B1759c587D7b1FAC072704086e34b53e2CB",
"0x4E4498dcc77C6EDF4AF4bA7c3F3286bA3fdC3a65",
"0x3896a7f7c694511ebB86dD8295227F8a0aC01cBC",
]

/**
* 账户间转账选择器
*/
class EthAccountSelector{
    compress_str=(str)=>{
        let s = String(str)
        let s1 = s.substring(0, 6);
        let s2 = s.substring(s.length - 4, s.length)
        return s1 + '...' + s2
    }
    /**
    * 在节点列表里查找指定的eth地址索引
    * @return index
    */
    indexOf=(nodeList, address)=>{
        for(let index=0; index<=nodeList.length-1; index++){
            let temp=nodeList[index].textContent
            let s1=temp.toLocaleLowerCase()
            let s2=this.compress_str(address.toLocaleLowerCase())
            if (s1==s2){
                return index
            }
        }
        return -1

    }
}

class Utils {
    /**
    * 带回调的延迟函数
    sleep2(1000).then((resolve, reject)=>console.log("done"))
    */
    static sleep = (ms) => {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    /**
    * 等待某个选择器出现
    */
    static waitFor = (selector, loopCount) => {
        return new Promise((resolve, reject) => {
            var result = null;
            while (loopCount > 0) {
                ret = document.querySelector(selector);
                if (ret !== null)
                    break;
                sleep(100)
                console.log(selector + ' 没有找到，继续等待...')
                loopCount--
            }
            return ret
        })
    }
    /*
        获取随机数
    */
    static random=(minVal, maxVal)=>{
        return (Math.floor(Math.random()*maxVal*10)+minVal*10)/10;
    }
}

/**
* 执行转账
*/
let transfer_to=(toAddr, amount)=>{
    let send_p=new Promise((resolve, reject)=>{
        let el = document.querySelectorAll('.icon-button__circle')[1]
        if (el===null){
            console.error('没有找到发送按钮')
            return reject(el)
        }
        el.click()//点击发送按钮
        return resolve(el)

    })

    let transfer_in_account_p=new Promise((resolve, reject)=>{ //在我的账户间转账
        let el =document.querySelector('.button.btn-link.send__select-recipient-wrapper__list__link')
        if (el===null){
            return reject(el)
        }
        el.click()
        return resolve(el)

    })


    /*
     *   在我的账户中选择一个
     *   
     */

    let account_list_p=new Promise((resolve, reject)=>{
        let nlist=document.querySelectorAll('.send__select-recipient-wrapper__group-item__subtitle')
        if (nlist===null || nlist.length===0){
            console.error('没有找到选择账户')
            return reject(-1)
        }
        let selector=new EthAccountSelector()
        let index=selector.indexOf(nlist, toAddr)
        if (index===null || index<0){
            return reject(-1)
        }
        nlist[index].click()//点击符合条件的帐号
        return resolve(index)
    })

    /*
        设置转账金额
    */
    let set_amount_p=new Promise((resolve, reject)=>{
        let el = document.querySelector('.unit-input__input-container>input')//转账金额
        if (el===null){
            console.error('转账金额没有找到')
            return reject(amount)
        }
        el.focus()
        el.value=amount
        return resolve(amount)
    })

    /*设置gas费*/
    let set_gas_p=new Promise((resolve, reject)=>{
        let elGas=document.querySelector('.advanced-gas-inputs__gas-edit-row__input[data-testid=gas-price]') //gas费
        if (elGas===null){
            console.error('gas fee 没有找到')
            return reject(0)
        }
        elGas.focus()
        elGas.value=Utils.random(1.32, 36500.501)
        return resolve(elGas.value)
    })

    /*设置gas限制*/
    let set_gas_limit_p=new Promise((resolve, reject)=>{
        let elGasLimit=document.querySelector('.advanced-gas-inputs__gas-edit-row__input[data-testid=gas-limit]') //gas限制
        if (elGasLimit===null){
            console.error('gas limit 没有找到')
            return reject(0)
        }
        elGasLimit.focus()
        elGasLimit.value=21000
        return resolve(elGasLimit.value)
    })


    /*
        点击下一步
    */
    let next_button_p=new Promise((resolve, reject)=>{
        let el=document.querySelector('.button.btn--rounded.btn-primary.page-container__footer-button')
        if (el===null){
            console.error('下一步按钮没有找到')
            return reject(el)
        }
        el.click()//点击下一步
        return resolve(el)
    })

    /* 确认按钮 */
    let confirm_button_p=new Promise((resolve, reject)=>{
        console.log('模拟按下确认按钮')
        return resolve(1)
    })

    Promise.all([
        send_p,
        Utils.sleep(300),
        transfer_in_account_p,
        Utils.sleep(300),
        account_list_p,
        Utils.sleep(300),
        set_amount_p,
        Utils.sleep(300),
        set_gas_p,
        Utils.sleep(300),
        set_gas_limit_p,
        Utils.sleep(300),
        next_button_p,
        Utils.sleep(2000),
        confirm_button_p,
        Utils.sleep(15000)
    ])
}

let to_addr='0x98840282a34956627FcD22E3AA139237EF8E9cBE'
let ret=transfer_to(to_addr, 1)
console.log('执行转账到', to_addr, '，需要等待网络确认完成')